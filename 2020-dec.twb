<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20213.21.1018.0949                               -->
<workbook original-version='18.1' source-build='2021.3.3 (20213.21.1018.0949)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='2020-dec-11-citibike-tripdata' inline='true' name='federated.1tm8tnm1fxb0tr16n1qg40vxwzou' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='2020-dec-11-citibike-tripdata' name='textscan.1y931qa17rujil1gfa4hd04dbkr9'>
            <connection class='textscan' directory='C:/Users/mdebo/Downloads/2020-dec-11-citibike-tripdata.csv' filename='2020-dec-11-citibike-tripdata.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1y931qa17rujil1gfa4hd04dbkr9' name='2020-dec-11-citibike-tripdata.csv' table='[2020-dec-11-citibike-tripdata#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='tripduration' ordinal='0' />
            <column datatype='datetime' name='starttime' ordinal='1' />
            <column datatype='datetime' name='stoptime' ordinal='2' />
            <column datatype='integer' name='start station id' ordinal='3' />
            <column datatype='string' name='start station name' ordinal='4' />
            <column datatype='real' name='start station latitude' ordinal='5' />
            <column datatype='real' name='start station longitude' ordinal='6' />
            <column datatype='integer' name='end station id' ordinal='7' />
            <column datatype='string' name='end station name' ordinal='8' />
            <column datatype='real' name='end station latitude' ordinal='9' />
            <column datatype='real' name='end station longitude' ordinal='10' />
            <column datatype='integer' name='bikeid' ordinal='11' />
            <column datatype='string' name='usertype' ordinal='12' />
            <column datatype='integer' name='birth year' ordinal='13' />
            <column datatype='integer' name='gender' ordinal='14' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1y931qa17rujil1gfa4hd04dbkr9' name='2020-dec-11-citibike-tripdata.csv' table='[2020-dec-11-citibike-tripdata#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='tripduration' ordinal='0' />
            <column datatype='datetime' name='starttime' ordinal='1' />
            <column datatype='datetime' name='stoptime' ordinal='2' />
            <column datatype='integer' name='start station id' ordinal='3' />
            <column datatype='string' name='start station name' ordinal='4' />
            <column datatype='real' name='start station latitude' ordinal='5' />
            <column datatype='real' name='start station longitude' ordinal='6' />
            <column datatype='integer' name='end station id' ordinal='7' />
            <column datatype='string' name='end station name' ordinal='8' />
            <column datatype='real' name='end station latitude' ordinal='9' />
            <column datatype='real' name='end station longitude' ordinal='10' />
            <column datatype='integer' name='bikeid' ordinal='11' />
            <column datatype='string' name='usertype' ordinal='12' />
            <column datatype='integer' name='birth year' ordinal='13' />
            <column datatype='integer' name='gender' ordinal='14' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[2020-dec-11-citibike-tripdata.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tripduration</remote-name>
            <remote-type>20</remote-type>
            <local-name>[tripduration]</local-name>
            <parent-name>[2020-dec-11-citibike-tripdata.csv]</parent-name>
            <remote-alias>tripduration</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2020-dec-11-citibike-tripdata.csv_794E18DD7F1C4F20B2F7FDE57E5A4E1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>starttime</remote-name>
            <remote-type>135</remote-type>
            <local-name>[starttime]</local-name>
            <parent-name>[2020-dec-11-citibike-tripdata.csv]</parent-name>
            <remote-alias>starttime</remote-alias>
            <ordinal>1</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2020-dec-11-citibike-tripdata.csv_794E18DD7F1C4F20B2F7FDE57E5A4E1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stoptime</remote-name>
            <remote-type>135</remote-type>
            <local-name>[stoptime]</local-name>
            <parent-name>[2020-dec-11-citibike-tripdata.csv]</parent-name>
            <remote-alias>stoptime</remote-alias>
            <ordinal>2</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2020-dec-11-citibike-tripdata.csv_794E18DD7F1C4F20B2F7FDE57E5A4E1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start station id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[start station id]</local-name>
            <parent-name>[2020-dec-11-citibike-tripdata.csv]</parent-name>
            <remote-alias>start station id</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2020-dec-11-citibike-tripdata.csv_794E18DD7F1C4F20B2F7FDE57E5A4E1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start station name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[start station name]</local-name>
            <parent-name>[2020-dec-11-citibike-tripdata.csv]</parent-name>
            <remote-alias>start station name</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2020-dec-11-citibike-tripdata.csv_794E18DD7F1C4F20B2F7FDE57E5A4E1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start station latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[start station latitude]</local-name>
            <parent-name>[2020-dec-11-citibike-tripdata.csv]</parent-name>
            <remote-alias>start station latitude</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2020-dec-11-citibike-tripdata.csv_794E18DD7F1C4F20B2F7FDE57E5A4E1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start station longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[start station longitude]</local-name>
            <parent-name>[2020-dec-11-citibike-tripdata.csv]</parent-name>
            <remote-alias>start station longitude</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2020-dec-11-citibike-tripdata.csv_794E18DD7F1C4F20B2F7FDE57E5A4E1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end station id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[end station id]</local-name>
            <parent-name>[2020-dec-11-citibike-tripdata.csv]</parent-name>
            <remote-alias>end station id</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2020-dec-11-citibike-tripdata.csv_794E18DD7F1C4F20B2F7FDE57E5A4E1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end station name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[end station name]</local-name>
            <parent-name>[2020-dec-11-citibike-tripdata.csv]</parent-name>
            <remote-alias>end station name</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2020-dec-11-citibike-tripdata.csv_794E18DD7F1C4F20B2F7FDE57E5A4E1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end station latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[end station latitude]</local-name>
            <parent-name>[2020-dec-11-citibike-tripdata.csv]</parent-name>
            <remote-alias>end station latitude</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2020-dec-11-citibike-tripdata.csv_794E18DD7F1C4F20B2F7FDE57E5A4E1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end station longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[end station longitude]</local-name>
            <parent-name>[2020-dec-11-citibike-tripdata.csv]</parent-name>
            <remote-alias>end station longitude</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2020-dec-11-citibike-tripdata.csv_794E18DD7F1C4F20B2F7FDE57E5A4E1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bikeid</remote-name>
            <remote-type>20</remote-type>
            <local-name>[bikeid]</local-name>
            <parent-name>[2020-dec-11-citibike-tripdata.csv]</parent-name>
            <remote-alias>bikeid</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2020-dec-11-citibike-tripdata.csv_794E18DD7F1C4F20B2F7FDE57E5A4E1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>usertype</remote-name>
            <remote-type>129</remote-type>
            <local-name>[usertype]</local-name>
            <parent-name>[2020-dec-11-citibike-tripdata.csv]</parent-name>
            <remote-alias>usertype</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2020-dec-11-citibike-tripdata.csv_794E18DD7F1C4F20B2F7FDE57E5A4E1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>birth year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[birth year]</local-name>
            <parent-name>[2020-dec-11-citibike-tripdata.csv]</parent-name>
            <remote-alias>birth year</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2020-dec-11-citibike-tripdata.csv_794E18DD7F1C4F20B2F7FDE57E5A4E1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gender</remote-name>
            <remote-type>20</remote-type>
            <local-name>[gender]</local-name>
            <parent-name>[2020-dec-11-citibike-tripdata.csv]</parent-name>
            <remote-alias>gender</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2020-dec-11-citibike-tripdata.csv_794E18DD7F1C4F20B2F7FDE57E5A4E1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Birth Year (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[birth year]' new-bin='true'>
          <bin default-name='false' value='&quot;17 and younger&quot;'>
            <value>2003</value>
            <value>2004</value>
          </bin>
          <bin default-name='false' value='&quot;18-24&quot;'>
            <value>1997</value>
            <value>1998</value>
            <value>1999</value>
            <value>2000</value>
            <value>2001</value>
            <value>2002</value>
          </bin>
          <bin default-name='false' value='&quot;25-34&quot;'>
            <value>1986</value>
            <value>1987</value>
            <value>1988</value>
            <value>1989</value>
            <value>1990</value>
            <value>1991</value>
            <value>1992</value>
            <value>1993</value>
            <value>1994</value>
            <value>1995</value>
            <value>1996</value>
          </bin>
          <bin default-name='false' value='&quot;35-44&quot;'>
            <value>1976</value>
            <value>1977</value>
            <value>1978</value>
            <value>1979</value>
            <value>1980</value>
            <value>1981</value>
            <value>1982</value>
            <value>1983</value>
            <value>1984</value>
            <value>1985</value>
          </bin>
          <bin default-name='false' value='&quot;45-54&quot;'>
            <value>1966</value>
            <value>1967</value>
            <value>1968</value>
            <value>1969</value>
            <value>1970</value>
            <value>1971</value>
            <value>1972</value>
            <value>1973</value>
            <value>1974</value>
            <value>1975</value>
          </bin>
          <bin default-name='false' value='&quot;55-64&quot;'>
            <value>1956</value>
            <value>1957</value>
            <value>1958</value>
            <value>1959</value>
            <value>1960</value>
            <value>1961</value>
            <value>1962</value>
            <value>1963</value>
            <value>1964</value>
            <value>1965</value>
          </bin>
          <bin default-name='false' value='&quot;65 and above&quot;'>
            <value>1946</value>
            <value>1947</value>
            <value>1948</value>
            <value>1949</value>
            <value>1950</value>
            <value>1951</value>
            <value>1952</value>
            <value>1953</value>
            <value>1954</value>
            <value>1955</value>
          </bin>
        </calculation>
      </column>
      <column caption='End Station Name Top 20' datatype='string' name='[End Station Name (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[end station name]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;1 Ave &amp; E 68 St, 12 Ave &amp; W 40 St, 6 Ave &amp; W 33 St and 17 more&quot;'>
            <value>&quot;1 Ave &amp; E 68 St&quot;</value>
            <value>&quot;12 Ave &amp; W 40 St&quot;</value>
            <value>&quot;6 Ave &amp; W 33 St&quot;</value>
            <value>&quot;9 Ave &amp; W 22 St&quot;</value>
            <value>&quot;Broadway &amp; E 14 St&quot;</value>
            <value>&quot;Broadway &amp; E 22 St&quot;</value>
            <value>&quot;Broadway &amp; W 25 St&quot;</value>
            <value>&quot;Broadway &amp; W 60 St&quot;</value>
            <value>&quot;Christopher St &amp; Greenwich St&quot;</value>
            <value>&quot;Cleveland Pl &amp; Spring St&quot;</value>
            <value>&quot;E 10 St &amp; Avenue A&quot;</value>
            <value>&quot;E 13 St &amp; Avenue A&quot;</value>
            <value>&quot;E 17 St &amp; Broadway&quot;</value>
            <value>&quot;E 33 St &amp; 1 Ave&quot;</value>
            <value>&quot;Grand St &amp; Elizabeth St&quot;</value>
            <value>&quot;Pier 40 - Hudson River Park&quot;</value>
            <value>&quot;University Pl &amp; E 14 St&quot;</value>
            <value>&quot;W 21 St &amp; 6 Ave&quot;</value>
            <value>&quot;West St &amp; Chambers St&quot;</value>
            <value>&quot;West St &amp; Liberty St&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='Start Station Name Bottom 20' datatype='string' name='[Start Station Name (group) 1]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[start station name]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;24 Ave &amp; 26 St, Anderson Ave &amp; W 164 St, Barry St &amp; Tiffany St and 17 more&quot;'>
            <value>&quot;24 Ave &amp; 26 St&quot;</value>
            <value>&quot;Anderson Ave &amp; W 164 St&quot;</value>
            <value>&quot;Barry St &amp; Tiffany St&quot;</value>
            <value>&quot;Charlotte St &amp; Boston Rd&quot;</value>
            <value>&quot;E 133 St &amp; Cypress Pl&quot;</value>
            <value>&quot;E 155 St &amp; Courtlandt Ave&quot;</value>
            <value>&quot;E 170 St &amp; Webster Ave_old&quot;</value>
            <value>&quot;Faile St &amp; Garrison Ave&quot;</value>
            <value>&quot;Fulton Ave &amp; E 172 St&quot;</value>
            <value>&quot;Garrison Ave &amp; Manida St&quot;</value>
            <value>&quot;Hunts Point Ave &amp; Bryant Ave&quot;</value>
            <value>&quot;Jerome Ave &amp; Ogden Ave&quot;</value>
            <value>&quot;Morris Ave &amp; E 171 St&quot;</value>
            <value>&quot;Picnic Point&quot;</value>
            <value>&quot;Prospect Ave &amp; Jennings St&quot;</value>
            <value>&quot;Soissons Landing&quot;</value>
            <value>&quot;Southern Blvd &amp; E 142 St&quot;</value>
            <value>&quot;Stephen St &amp; Seneca Ave&quot;</value>
            <value>&quot;University Ave &amp; W 168 St&quot;</value>
            <value>&quot;Yankee Ferry Terminal&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='Start Station Name Top 20' datatype='string' name='[Start Station Name (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[start station name]' default='&quot;Other&quot;' new-bin='true' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='2020-dec-11-citibike-tripdata.csv' datatype='table' name='[__tableau_internal_object_id__].[2020-dec-11-citibike-tripdata.csv_794E18DD7F1C4F20B2F7FDE57E5A4E1E]' role='measure' type='quantitative' />
      <column caption='Bikeid' datatype='integer' name='[bikeid]' role='measure' type='quantitative' />
      <column caption='Birth Year' datatype='integer' name='[birth year]' role='dimension' type='quantitative' />
      <column caption='End Station Id' datatype='integer' name='[end station id]' role='measure' type='quantitative' />
      <column aggregation='Avg' caption='End Station Latitude' datatype='real' name='[end station latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='End Station Longitude' datatype='real' name='[end station longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='End Station Name' datatype='string' name='[end station name]' role='dimension' type='nominal' />
      <column caption='Gender' datatype='integer' name='[gender]' role='measure' type='quantitative' />
      <column caption='Start Station Id' datatype='integer' name='[start station id]' role='measure' type='quantitative' />
      <column aggregation='Avg' caption='Start Station Latitude' datatype='real' name='[start station latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Start Station Longitude' datatype='real' name='[start station longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Start Station Name' datatype='string' name='[start station name]' role='dimension' type='nominal' />
      <column caption='Starttime' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
      <column caption='Stoptime' datatype='datetime' name='[stoptime]' role='dimension' type='ordinal' />
      <column caption='Tripduration' datatype='integer' name='[tripduration]' role='measure' type='quantitative' />
      <column caption='Usertype' datatype='string' name='[usertype]' role='dimension' type='nominal' />
      <group hidden='true' name='[Exclusions (End Station Name Top 20,Start Station Name Top 20)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[End Station Name (group)]' />
          <groupfilter function='level-members' level='[Start Station Name (group)]' />
        </groupfilter>
      </group>
      <group caption='Top 20' name='[Set 1]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='reorder-dimensionality'>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[Start Station Name (group)]' member='&quot;1 Ave &amp; E 68 St, 12 Ave &amp; W 40 St, 6 Ave &amp; W 33 St and 17 more&quot;' />
            <groupfilter function='union'>
              <groupfilter function='member' level='[start station name]' member='&quot;1 Ave &amp; E 68 St&quot;' />
              <groupfilter function='member' level='[start station name]' member='&quot;12 Ave &amp; W 40 St&quot;' />
              <groupfilter function='member' level='[start station name]' member='&quot;6 Ave &amp; W 33 St&quot;' />
              <groupfilter function='member' level='[start station name]' member='&quot;9 Ave &amp; W 22 St&quot;' />
              <groupfilter function='member' level='[start station name]' member='&quot;Broadway &amp; E 14 St&quot;' />
              <groupfilter function='member' level='[start station name]' member='&quot;Broadway &amp; E 22 St&quot;' />
              <groupfilter function='member' level='[start station name]' member='&quot;Broadway &amp; W 25 St&quot;' />
              <groupfilter function='member' level='[start station name]' member='&quot;Broadway &amp; W 60 St&quot;' />
              <groupfilter function='member' level='[start station name]' member='&quot;Christopher St &amp; Greenwich St&quot;' />
              <groupfilter function='member' level='[start station name]' member='&quot;Cleveland Pl &amp; Spring St&quot;' />
              <groupfilter function='member' level='[start station name]' member='&quot;E 10 St &amp; Avenue A&quot;' />
              <groupfilter function='member' level='[start station name]' member='&quot;E 13 St &amp; Avenue A&quot;' />
              <groupfilter function='member' level='[start station name]' member='&quot;E 17 St &amp; Broadway&quot;' />
              <groupfilter function='member' level='[start station name]' member='&quot;E 33 St &amp; 1 Ave&quot;' />
              <groupfilter function='member' level='[start station name]' member='&quot;Grand St &amp; Elizabeth St&quot;' />
              <groupfilter function='member' level='[start station name]' member='&quot;Pier 40 - Hudson River Park&quot;' />
              <groupfilter function='member' level='[start station name]' member='&quot;University Pl &amp; E 14 St&quot;' />
              <groupfilter function='member' level='[start station name]' member='&quot;W 21 St &amp; 6 Ave&quot;' />
              <groupfilter function='member' level='[start station name]' member='&quot;West St &amp; Chambers St&quot;' />
              <groupfilter function='member' level='[start station name]' member='&quot;West St &amp; Liberty St&quot;' />
            </groupfilter>
          </groupfilter>
          <order>
            <hierarchy name='[start station name]' />
            <hierarchy name='[Start Station Name (group)]' />
          </order>
        </groupfilter>
      </group>
      <group caption='Start Station Name Bottom 20a' name='[Start Station Name Set]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[start station name]' member='&quot;24 Ave &amp; 26 St&quot;' />
          <groupfilter function='member' level='[start station name]' member='&quot;Anderson Ave &amp; W 164 St&quot;' />
          <groupfilter function='member' level='[start station name]' member='&quot;Barry St &amp; Tiffany St&quot;' />
          <groupfilter function='member' level='[start station name]' member='&quot;Charlotte St &amp; Boston Rd&quot;' />
          <groupfilter function='member' level='[start station name]' member='&quot;E 133 St &amp; Cypress Pl&quot;' />
          <groupfilter function='member' level='[start station name]' member='&quot;E 155 St &amp; Courtlandt Ave&quot;' />
          <groupfilter function='member' level='[start station name]' member='&quot;E 170 St &amp; Webster Ave_old&quot;' />
          <groupfilter function='member' level='[start station name]' member='&quot;Faile St &amp; Garrison Ave&quot;' />
          <groupfilter function='member' level='[start station name]' member='&quot;Fulton Ave &amp; E 172 St&quot;' />
          <groupfilter function='member' level='[start station name]' member='&quot;Garrison Ave &amp; Manida St&quot;' />
          <groupfilter function='member' level='[start station name]' member='&quot;Hunts Point Ave &amp; Bryant Ave&quot;' />
          <groupfilter function='member' level='[start station name]' member='&quot;Jerome Ave &amp; Ogden Ave&quot;' />
          <groupfilter function='member' level='[start station name]' member='&quot;Morris Ave &amp; E 171 St&quot;' />
          <groupfilter function='member' level='[start station name]' member='&quot;Picnic Point&quot;' />
          <groupfilter function='member' level='[start station name]' member='&quot;Prospect Ave &amp; Jennings St&quot;' />
          <groupfilter function='member' level='[start station name]' member='&quot;Soissons Landing&quot;' />
          <groupfilter function='member' level='[start station name]' member='&quot;Southern Blvd &amp; E 142 St&quot;' />
          <groupfilter function='member' level='[start station name]' member='&quot;Stephen St &amp; Seneca Ave&quot;' />
          <groupfilter function='member' level='[start station name]' member='&quot;University Ave &amp; W 168 St&quot;' />
          <groupfilter function='member' level='[start station name]' member='&quot;Yankee Ferry Terminal&quot;' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Start Station Name (group)]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;1 Ave &amp; E 68 St, 12 Ave &amp; W 40 St, 6 Ave &amp; W 33 St and 17 more&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[End Station Name (group)]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;1 Ave &amp; E 68 St, 12 Ave &amp; W 40 St, 6 Ave &amp; W 33 St and 17 more&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Start Station Name (group) 1]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;24 Ave &amp; 26 St, Anderson Ave &amp; W 164 St, Barry St &amp; Tiffany St and 17 more&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='2020-dec-11-citibike-tripdata.csv' id='2020-dec-11-citibike-tripdata.csv_794E18DD7F1C4F20B2F7FDE57E5A4E1E'>
            <properties context=''>
              <relation connection='textscan.1y931qa17rujil1gfa4hd04dbkr9' name='2020-dec-11-citibike-tripdata.csv' table='[2020-dec-11-citibike-tripdata#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='tripduration' ordinal='0' />
                  <column datatype='datetime' name='starttime' ordinal='1' />
                  <column datatype='datetime' name='stoptime' ordinal='2' />
                  <column datatype='integer' name='start station id' ordinal='3' />
                  <column datatype='string' name='start station name' ordinal='4' />
                  <column datatype='real' name='start station latitude' ordinal='5' />
                  <column datatype='real' name='start station longitude' ordinal='6' />
                  <column datatype='integer' name='end station id' ordinal='7' />
                  <column datatype='string' name='end station name' ordinal='8' />
                  <column datatype='real' name='end station latitude' ordinal='9' />
                  <column datatype='real' name='end station longitude' ordinal='10' />
                  <column datatype='integer' name='bikeid' ordinal='11' />
                  <column datatype='string' name='usertype' ordinal='12' />
                  <column datatype='integer' name='birth year' ordinal='13' />
                  <column datatype='integer' name='gender' ordinal='14' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='End Station Top 20'>
      <table>
        <view>
          <datasources>
            <datasource caption='2020-dec-11-citibike-tripdata' name='federated.1tm8tnm1fxb0tr16n1qg40vxwzou' />
          </datasources>
          <datasource-dependencies datasource='federated.1tm8tnm1fxb0tr16n1qg40vxwzou'>
            <_.fcp.ObjectModelTableType.false...column caption='2020-dec-11-citibike-tripdata.csv' datatype='integer' name='[__tableau_internal_object_id__].[2020-dec-11-citibike-tripdata.csv_794E18DD7F1C4F20B2F7FDE57E5A4E1E]' role='measure' type='quantitative' />
            <column caption='End Station Name Top 20' datatype='string' name='[End Station Name (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[end station name]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='true' value='&quot;1 Ave &amp; E 68 St, 12 Ave &amp; W 40 St, 6 Ave &amp; W 33 St and 17 more&quot;'>
                  <value>&quot;1 Ave &amp; E 68 St&quot;</value>
                  <value>&quot;12 Ave &amp; W 40 St&quot;</value>
                  <value>&quot;6 Ave &amp; W 33 St&quot;</value>
                  <value>&quot;9 Ave &amp; W 22 St&quot;</value>
                  <value>&quot;Broadway &amp; E 14 St&quot;</value>
                  <value>&quot;Broadway &amp; E 22 St&quot;</value>
                  <value>&quot;Broadway &amp; W 25 St&quot;</value>
                  <value>&quot;Broadway &amp; W 60 St&quot;</value>
                  <value>&quot;Christopher St &amp; Greenwich St&quot;</value>
                  <value>&quot;Cleveland Pl &amp; Spring St&quot;</value>
                  <value>&quot;E 10 St &amp; Avenue A&quot;</value>
                  <value>&quot;E 13 St &amp; Avenue A&quot;</value>
                  <value>&quot;E 17 St &amp; Broadway&quot;</value>
                  <value>&quot;E 33 St &amp; 1 Ave&quot;</value>
                  <value>&quot;Grand St &amp; Elizabeth St&quot;</value>
                  <value>&quot;Pier 40 - Hudson River Park&quot;</value>
                  <value>&quot;University Pl &amp; E 14 St&quot;</value>
                  <value>&quot;W 21 St &amp; 6 Ave&quot;</value>
                  <value>&quot;West St &amp; Chambers St&quot;</value>
                  <value>&quot;West St &amp; Liberty St&quot;</value>
                </bin>
              </calculation>
            </column>
            <_.fcp.ObjectModelTableType.true...column caption='2020-dec-11-citibike-tripdata.csv' datatype='table' name='[__tableau_internal_object_id__].[2020-dec-11-citibike-tripdata.csv_794E18DD7F1C4F20B2F7FDE57E5A4E1E]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[2020-dec-11-citibike-tripdata.csv_794E18DD7F1C4F20B2F7FDE57E5A4E1E]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:2020-dec-11-citibike-tripdata.csv_794E18DD7F1C4F20B2F7FDE57E5A4E1E:qk]' pivot='key' type='quantitative' />
            <column caption='End Station Name' datatype='string' name='[end station name]' role='dimension' type='nominal' />
            <column-instance column='[end station name]' derivation='None' name='[none:end station name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1tm8tnm1fxb0tr16n1qg40vxwzou].[none:end station name:nk]'>
            <groupfilter count='20' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([__tableau_internal_object_id__].[2020-dec-11-citibike-tripdata.csv_794E18DD7F1C4F20B2F7FDE57E5A4E1E])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;1 Ave &amp; E 68 St&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;12 Ave &amp; W 40 St&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;6 Ave &amp; W 33 St&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;9 Ave &amp; W 22 St&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Broadway &amp; E 14 St&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Broadway &amp; E 22 St&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Broadway &amp; W 25 St&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Broadway &amp; W 60 St&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Christopher St &amp; Greenwich St&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Cleveland Pl &amp; Spring St&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;E 10 St &amp; Avenue A&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;E 13 St &amp; Avenue A&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;E 17 St &amp; Broadway&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;E 33 St &amp; 1 Ave&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Grand St &amp; Elizabeth St&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Pier 40 - Hudson River Park&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;University Pl &amp; E 14 St&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;W 21 St &amp; 6 Ave&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;West St &amp; Chambers St&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;West St &amp; Liberty St&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1tm8tnm1fxb0tr16n1qg40vxwzou].[none:end station name:nk]' direction='DESC' using='[federated.1tm8tnm1fxb0tr16n1qg40vxwzou].[__tableau_internal_object_id__].[cnt:2020-dec-11-citibike-tripdata.csv_794E18DD7F1C4F20B2F7FDE57E5A4E1E:qk]' />
          <slices>
            <column>[federated.1tm8tnm1fxb0tr16n1qg40vxwzou].[none:end station name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1tm8tnm1fxb0tr16n1qg40vxwzou].[End Station Name (group)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1tm8tnm1fxb0tr16n1qg40vxwzou].[none:end station name:nk]</rows>
        <cols>[federated.1tm8tnm1fxb0tr16n1qg40vxwzou].[__tableau_internal_object_id__].[cnt:2020-dec-11-citibike-tripdata.csv_794E18DD7F1C4F20B2F7FDE57E5A4E1E:qk]</cols>
      </table>
      <simple-id uuid='{1395CDBA-C9E3-4FC0-95D5-6883B5A4204A}' />
    </worksheet>
    <worksheet name='Peak End Hour'>
      <table>
        <view>
          <datasources>
            <datasource caption='2020-dec-11-citibike-tripdata' name='federated.1tm8tnm1fxb0tr16n1qg40vxwzou' />
          </datasources>
          <datasource-dependencies datasource='federated.1tm8tnm1fxb0tr16n1qg40vxwzou'>
            <_.fcp.ObjectModelTableType.true...column caption='2020-dec-11-citibike-tripdata.csv' datatype='table' name='[__tableau_internal_object_id__].[2020-dec-11-citibike-tripdata.csv_794E18DD7F1C4F20B2F7FDE57E5A4E1E]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[2020-dec-11-citibike-tripdata.csv_794E18DD7F1C4F20B2F7FDE57E5A4E1E]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:2020-dec-11-citibike-tripdata.csv_794E18DD7F1C4F20B2F7FDE57E5A4E1E:qk]' pivot='key' type='quantitative' />
            <column-instance column='[stoptime]' derivation='Hour' name='[hr:stoptime:ok]' pivot='key' type='ordinal' />
            <column caption='Stoptime' datatype='datetime' name='[stoptime]' role='dimension' type='ordinal' />
            <_.fcp.ObjectModelTableType.false...column caption='2020-dec-11-citibike-tripdata.csv' datatype='integer' name='[__tableau_internal_object_id__].[2020-dec-11-citibike-tripdata.csv_794E18DD7F1C4F20B2F7FDE57E5A4E1E]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
          </pane>
        </panes>
        <rows>[federated.1tm8tnm1fxb0tr16n1qg40vxwzou].[__tableau_internal_object_id__].[cnt:2020-dec-11-citibike-tripdata.csv_794E18DD7F1C4F20B2F7FDE57E5A4E1E:qk]</rows>
        <cols>[federated.1tm8tnm1fxb0tr16n1qg40vxwzou].[hr:stoptime:ok]</cols>
      </table>
      <simple-id uuid='{B49E4938-C408-406F-BDC5-52195AF607C8}' />
    </worksheet>
    <worksheet name='Peak Start Hour'>
      <table>
        <view>
          <datasources>
            <datasource caption='2020-dec-11-citibike-tripdata' name='federated.1tm8tnm1fxb0tr16n1qg40vxwzou' />
          </datasources>
          <datasource-dependencies datasource='federated.1tm8tnm1fxb0tr16n1qg40vxwzou'>
            <_.fcp.ObjectModelTableType.true...column caption='2020-dec-11-citibike-tripdata.csv' datatype='table' name='[__tableau_internal_object_id__].[2020-dec-11-citibike-tripdata.csv_794E18DD7F1C4F20B2F7FDE57E5A4E1E]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[2020-dec-11-citibike-tripdata.csv_794E18DD7F1C4F20B2F7FDE57E5A4E1E]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:2020-dec-11-citibike-tripdata.csv_794E18DD7F1C4F20B2F7FDE57E5A4E1E:qk]' pivot='key' type='quantitative' />
            <column-instance column='[starttime]' derivation='Hour' name='[hr:starttime:ok]' pivot='key' type='ordinal' />
            <column caption='Starttime' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
            <_.fcp.ObjectModelTableType.false...column caption='2020-dec-11-citibike-tripdata.csv' datatype='integer' name='[__tableau_internal_object_id__].[2020-dec-11-citibike-tripdata.csv_794E18DD7F1C4F20B2F7FDE57E5A4E1E]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
          </pane>
        </panes>
        <rows>[federated.1tm8tnm1fxb0tr16n1qg40vxwzou].[__tableau_internal_object_id__].[cnt:2020-dec-11-citibike-tripdata.csv_794E18DD7F1C4F20B2F7FDE57E5A4E1E:qk]</rows>
        <cols>[federated.1tm8tnm1fxb0tr16n1qg40vxwzou].[hr:starttime:ok]</cols>
      </table>
      <simple-id uuid='{A5B7672C-16B8-461D-9519-57B8B83A4000}' />
    </worksheet>
    <worksheet name='Start Station Bottom 20'>
      <table>
        <view>
          <datasources>
            <datasource caption='2020-dec-11-citibike-tripdata' name='federated.1tm8tnm1fxb0tr16n1qg40vxwzou' />
          </datasources>
          <datasource-dependencies datasource='federated.1tm8tnm1fxb0tr16n1qg40vxwzou'>
            <_.fcp.ObjectModelTableType.true...column caption='2020-dec-11-citibike-tripdata.csv' datatype='table' name='[__tableau_internal_object_id__].[2020-dec-11-citibike-tripdata.csv_794E18DD7F1C4F20B2F7FDE57E5A4E1E]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[2020-dec-11-citibike-tripdata.csv_794E18DD7F1C4F20B2F7FDE57E5A4E1E]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:2020-dec-11-citibike-tripdata.csv_794E18DD7F1C4F20B2F7FDE57E5A4E1E:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start station name]' derivation='None' name='[none:start station name:nk]' pivot='key' type='nominal' />
            <column caption='Start Station Name' datatype='string' name='[start station name]' role='dimension' type='nominal' />
            <_.fcp.ObjectModelTableType.false...column caption='2020-dec-11-citibike-tripdata.csv' datatype='integer' name='[__tableau_internal_object_id__].[2020-dec-11-citibike-tripdata.csv_794E18DD7F1C4F20B2F7FDE57E5A4E1E]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1tm8tnm1fxb0tr16n1qg40vxwzou].[none:start station name:nk]'>
            <groupfilter count='20' end='bottom' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([__tableau_internal_object_id__].[2020-dec-11-citibike-tripdata.csv_794E18DD7F1C4F20B2F7FDE57E5A4E1E])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:start station name:nk]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1tm8tnm1fxb0tr16n1qg40vxwzou].[none:start station name:nk]' direction='ASC' using='[federated.1tm8tnm1fxb0tr16n1qg40vxwzou].[__tableau_internal_object_id__].[cnt:2020-dec-11-citibike-tripdata.csv_794E18DD7F1C4F20B2F7FDE57E5A4E1E:qk]' />
          <slices>
            <column>[federated.1tm8tnm1fxb0tr16n1qg40vxwzou].[none:start station name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1tm8tnm1fxb0tr16n1qg40vxwzou].[none:start station name:nk]</rows>
        <cols>[federated.1tm8tnm1fxb0tr16n1qg40vxwzou].[__tableau_internal_object_id__].[cnt:2020-dec-11-citibike-tripdata.csv_794E18DD7F1C4F20B2F7FDE57E5A4E1E:qk]</cols>
      </table>
      <simple-id uuid='{7BBC985B-BB9E-44EB-A822-B23BB2082F85}' />
    </worksheet>
    <worksheet name='Start Station Top 20'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{0ABC36D0-96FC-41C6-923A-1DF79292574A}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Start Station Top 20'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1tm8tnm1fxb0tr16n1qg40vxwzou].[End Station Name (group)]</field>
            <field>[federated.1tm8tnm1fxb0tr16n1qg40vxwzou].[Start Station Name (group) 1]</field>
            <field>[federated.1tm8tnm1fxb0tr16n1qg40vxwzou].[Start Station Name (group)]</field>
            <field>[federated.1tm8tnm1fxb0tr16n1qg40vxwzou].[none:start station name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4CB1176A-1C09-4D71-BE88-C119F38EFDE1}' />
    </window>
    <window class='worksheet' name='End Station Top 20'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1tm8tnm1fxb0tr16n1qg40vxwzou].[End Station Name (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1tm8tnm1fxb0tr16n1qg40vxwzou].[none:end station name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{67E613B7-0D02-4086-90FC-55E2EAE43557}' />
    </window>
    <window class='worksheet' name='Start Station Bottom 20'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1tm8tnm1fxb0tr16n1qg40vxwzou].[Start Station Name (group) 1]</field>
            <field>[federated.1tm8tnm1fxb0tr16n1qg40vxwzou].[Start Station Name (group)]</field>
            <field>[federated.1tm8tnm1fxb0tr16n1qg40vxwzou].[none:start station name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{628B69A0-D048-4ED9-B059-C7AD0AB188AF}' />
    </window>
    <window class='worksheet' maximized='true' name='Peak Start Hour'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1tm8tnm1fxb0tr16n1qg40vxwzou].[hr:starttime:ok]</field>
            <field>[federated.1tm8tnm1fxb0tr16n1qg40vxwzou].[yr:starttime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CD3095DB-31F8-4361-8071-4F328DD4271E}' />
    </window>
    <window class='worksheet' name='Peak End Hour'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1tm8tnm1fxb0tr16n1qg40vxwzou].[yr:stoptime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AE42B6A2-3935-4A89-A232-C4F23B6F1E1C}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='End Station Top 20' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Peak End Hour' width='192'>
      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
      /h/++kLkqRWxZgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Peak Start Hour' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Start Station Bottom 20' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Start Station Top 20' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
